apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: azureblob-nfs-premium
  labels:
    app.kubernetes.io/managed-by: Heml
  annotations:
    meta.helm.sh/release-name: wp07-jenkins
    meta.helm.sh/release-namespace: jenkins
provisioner: blob.csi.azure.com
parameters:
  protocol: nfs
  tags: ApplicationName=AKS-Jenkins,OwnerService=LinhNMD,ProjectID=WB07
  resourceGroup: "WP07"
  containerName: "wp07storagecontainer"
  storageAccount: "wp07storageaccount"
volumeBindingMode: Immediate
allowVolumeExpansion: true
mountOptions:
  - nconnect=4
#---
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  annotations:
#    pv.kubernetes.io/provisioned-by: blob.csi.azure.com
#  name: pv-blob
#spec:
#  capacity:
#    storage: {{ .Values.storage.size }}
#  accessModes:
#    - ReadWriteMany
#  persistentVolumeReclaimPolicy: Retain  # If set as "Delete" container would be removed after pvc deletion
#  storageClassName: azureblob-nfs-premium
#  mountOptions:
#    - nconnect=4
#  csi:
#    driver: blob.csi.azure.com
#    # make sure volumeid is unique for every identical storage blob container in the cluster
#    # character `#` and `/` are reserved for internal use and cannot be used in volumehandle
#    volumeHandle: wp07storageaccount_wp07storagecontainer
#    volumeAttributes:
#      resourceGroup: WP07
#      storageAccount: wp07storageaccount
#      containerName: wp07storagecontainer
#      protocol: nfs
---
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#  name: {{ .Values.storage.PersistentVolumeClaimName }}
#spec:
#  accessModes:
#    - ReadWriteMany
#  resources:
#    requests:
#      storage: {{ .Values.storage.size }}
#  volumeName: pv-blob
#  storageClassName: azureblob-nfs-premium
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.storage.PersistentVolumeClaimName }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azureblob-nfs-premium
  resources:
    requests:
      storage: 10Gi