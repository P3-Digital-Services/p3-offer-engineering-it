---
- name: Install NGINX
  apt:
    name: nginx
    state: present
    update_cache: yes

- name: Remove Default NGINX Config
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Get Public IP Address
  community.general.ipify_facts:

- name: Generate Self-signed SSL Certificate
  command: openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout /etc/nginx/selfsigned.key \
    -out /etc/nginx/selfsigned.crt \
    -subj "/CN={{ ansible_facts.ipify_public_ip }}"

- name: Create NGINX Reverse Proxy Config
  copy:
    dest: /etc/nginx/sites-available/flask_app
    content: |
      server {
          listen 80;
          server_name _;

          location / {
              return 301 https://$host$request_uri;
          }
      }

      server {
          listen 443 ssl;
          server_name _;

          client_max_body_size 500M;

          ssl_certificate /etc/nginx/selfsigned.crt;
          ssl_certificate_key /etc/nginx/selfsigned.key;
          ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
          ssl_ciphers HIGH:!aNULL:!MD5;

          location / {
              proxy_pass http://127.0.0.1:5000;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }

- name: Enable Flask App NGINX Config
  file:
    src: /etc/nginx/sites-available/flask_app
    dest: /etc/nginx/sites-enabled/flask_app
    state: link

- name: Test NGINX Configuration
  command: nginx -t

- name: Reload NGINX
  service:
    name: nginx
    state: reloaded

- name: Install Python3 And Pip
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - python3
    - python3-pip

- name: Install Required Python Libraries
  pip:
    name: 
      - flask
      - prometheus_client

- name: Copy Flask App File
  copy:
    src: ../config/flask/flask_app.py
    dest: /opt/flask_app.py

- name: Create Systemd Service For Flask App
  copy:
    dest: /etc/systemd/system/flask_app.service
    content: |
      [Unit]
      Description=Flask Application

      [Service]
      ExecStart=/usr/bin/python3 /opt/flask_app.py
      Restart=always
      User=root
      WorkingDirectory=/opt
      Environment=PYTHONUNBUFFERED=1

      [Install]
      WantedBy=multi-user.target

- name: Reload Systemd Daemon
  command: systemctl daemon-reload

- name: Start Flask App Service
  systemd:
    name: flask_app
    state: started
    enabled: yes

- name: Restart Flask App Service
  systemd:
    name: flask_app
    state: restarted
