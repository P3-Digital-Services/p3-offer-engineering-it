- hosts: file-server
  become: true

  tasks:
    # 1. Install Nginx and OpenSSL (for generating self-signed certificates)
    - name: Install Nginx and OpenSSL
      apt:
        name:
          - nginx
          - openssl
        state: present
        update_cache: yes

    # 2. Start and enable Nginx
    - name: Start and enable Nginx
      systemd:
        name: nginx
        state: started
        enabled: yes

    # 3. Create a directory for serving files
    - name: Create directory for serving files
      file:
        path: /var/www/files
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    # 4. Generate a self-signed TLS certificate
    - name: Generate self-signed certificate
      command: >
        openssl req -x509 -nodes -days 365 -newkey rsa:2048
        -keyout /etc/ssl/private/nginx-selfsigned.key
        -out /etc/ssl/certs/nginx-selfsigned.crt
        -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN={{ file_server_ip }}"
      args:
        creates: /etc/ssl/certs/nginx-selfsigned.crt

    # 5. Configure Nginx to serve files over HTTPS with a self-signed certificate
    - name: Configure Nginx for HTTPS with self-signed cert
      copy:
        dest: /etc/nginx/nginx.conf
        content: |
          user www-data;
          worker_processes auto;

          events {
              worker_connections 1024;
          }

          http {
              keepalive_timeout 65;
              keepalive_requests 100;
              server {
                  listen 443 ssl http2;
                  server_name {{ file_server_ip }};

                  ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
                  ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

                  root /var/www/files;
                  # index index.html index.htm;

                  location / {
                      autoindex on;  # Enable directory listing
                      autoindex_exact_size off;
                      autoindex_localtime on;
                      sendfile on;
                      tcp_nopush on;
                      tcp_nodelay on;
                  }
              }

              server {
                  listen 80;
                  server_name {{ file_server_ip }};
                  return 301 https://$host$request_uri;  # Redirect HTTP to HTTPS
              }
          }

    - name: Download example file
      command: wget https://releases.ubuntu.com/18.04/ubuntu-18.04.6-desktop-amd64.iso -P /var/www/files/

      notify: reload nginx

  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded